@page
@using IMDb.Models
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="container-fluid text-center">
    <h1 class="display-4 p-2">Welcome, your Dashboard is ready!</h1>
    <p>Here you'll find relevant information about your database. all the statistics here are available on default</p>
    <div class="card col-3 col-md-10">
        <table class="table">
            <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">#</th>
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col-sm-4 py-2">
            <div class="card card-body h-100">
                <div class="h-100">
                    <canvas id="record-chart"></canvas>
                </div>
            </div>
        </div>
        <div class="row">
        <div class="col py-2">
            <div class="card h-100 text-white">
                <div class="card-body">
                    <canvas id="bar-chart" height="800"></canvas>
                </div>
            </div>
        </div>
        </div>
        <div class="row">
        <div class="col py-2">
            <div class="card card-body">
                    <canvas id="Genre-Rating" height="800"></canvas>
            </div>
        </div>
        </div>
    </div>
</div>
@*here i include chart.js for graphs in our application*@
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
var xValues = [];
var xLabels = [];
var xColors = [];
const randColor = () =>  {
    return "#" + Math.floor(Math.random()*16777215).toString(16).padStart(6, '0').toUpperCase();
}

</script>

@foreach (Genre g in Model.genres)
{
    <script>
    xColors.push(randColor());
    xValues.push("@g.titleCount");
    xLabels.push("@g.genreName");
    </script>
}

<script>
    new Chart(document.getElementById("bar-chart"), {
        type: 'bar',
        data: {
            
            labels: xLabels,
            datasets: [
                {
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    label: "movies in db of this category",
                    data: xValues
                }
            ]
        },
        options: {
            indexAxis: 'y',
            scales: {
                x: {
                    beginAtZero: true,
                     ticks: {
                        stepsize: 500000,
                        mirror: true,
                    }
                }
            },
            maintainAspectRatio: false,
            legend: { display: false },
            title: {
                display: true,
                text: 'number of movies released per category per year for 6 years'
            }
        }
    });



    new Chart(document.getElementById("Genre-Rating"), {
      type: 'bar',
            data: {
                
                labels: [  "Action",  "Adult",  "Adventure",  "Animation",  "Biography",  "Comedy",  "Crime",  "Documentary",  "Drama",  "Family",  "Fantasy",  "Film-Noir",  "Game-Show",  "History",  "Horror",  "Music",  "Musical",  "Mystery",  "News",  "Reality-TV",  "Romance",  "Sci-Fi",  "Short",  "Sport",  "Talk-Show",  "Thriller",  "War",  "Western"],
                datasets: [
                    {
                        barThickness: 20,                        
                        label: "avg rating in this genre",
                        backgroundColor: xColors,
                        data: [  6.9548260047158603,  6.3853054911059406,  7.0501656548633385,  7.0813475414535976,  7.1731594585671798,  6.937440780746492,  7.0957297329120124,  7.2379703689008172,  6.9876011898273207,  7.0804801927342016,  7.0077351772537133,  6.5021226415094464,  6.8911806753759048,  7.3083091522233889,  6.0792107513092093,  7.0387509573653571,  6.4996567954501066,  7.1292489776488983,  6.56722325817932,  6.019933554817275,  6.7794874507284996,  6.8139626257813184,  6.7820800015452734,  6.7921782070414585,  6.7791922915137781,  7.0102543554006969,  6.8898817677965397],
                    }
                ]
            },
            options: {
                maintainAspectRatio: false,
                responsive: true,
                indexAxis: 'y',
            scales: {
                x: {
                  beginAtZero: true,
                  max: 10,
                   },
                },              
                legend: { display: false },
                title: {
                    display: true,
                    text: 'average rating per category'
                }
            }
        });

    var xValues = ["Normal movies in db"];
    var yValues = [@Model.moviecount  ];
    var barColors = [
        "#b91d47",
        "#00aba9",
        "#2b5797",
        "#e8c3b9",
        "#1e7145"
    ];

    new Chart("myChart", {
        type: "pie",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                data: yValues
            }]
        },
        options: {
            title: {
                display: true,
                text: "World Wide Wine Production 2018"
            }
        }
    });
    new Chart("record-chart", {
        type: "pie",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                data: yValues
            }]
        },
        options: {
            title: {
                display: true,
                text: "Records in db per table"
            }
        }
    });


</script>